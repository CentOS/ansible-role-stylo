#!/usr/bin/python3
import time
import sys
import json
import os 
import subprocess
import OpenSSL.crypto as crypto
import ssl
import yaml
import beanstalkc

config_file = os.getenv('HOME')+'/stylo.yml'

if os.path.exists(config_file):
  with open(config_file, 'r') as ymlfile:
      cfg = yaml.load(ymlfile, Loader=yaml.SafeLoader)
else:
  print('%s config file not found !' % (config_file))
  sys.exit(1)


def main():
  bs_connection = False
  while True:
    try:
      if not bs_connection:
        bs = beanstalkc.Connection(connect_timeout=2)
        bs.watch('signing')
      bs_connection = True
      print('[%s] : Waiting for tag/untag operations in signing queue' % time.asctime())
      job = bs.reserve()
      msg_payload = json.loads(job.body)
      process_koji_tag_cmd = "/home/stylo/stylo-code/process-tag -t %s -r" % (msg_payload['tag'])
      time.sleep(4)
      waiting_jobs = bs.stats_tube('signing')['current-jobs-ready'] 
      if waiting_jobs > 0:     
        next_job = bs.reserve()
        next_jobpayload = json.loads(next_job.body) 
        if msg_payload['tag'] == next_jobpayload['tag']:
          job.delete()
          next_job.release()
        else:
          next_job.release()
          job.delete()
          print("[%s] : Launching job 'process-tag -t %s -r'" % (str(time.asctime()),msg_payload['tag']))
          process_koji_tag = subprocess.call(process_koji_tag_cmd, shell=True)  
      else:
        job.delete()
        print("[%s] : Launching job 'process-tag -t %s -r'" % (str(time.asctime()),msg_payload['tag']))
        process_koji_tag = subprocess.call(process_koji_tag_cmd, shell=True)  

    except beanstalkc.SocketError:
      bs_connection = False
      time.sleep(2)
      continue   
   

if __name__ == '__main__':
    main()
